<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Solutions Architect Resources</title>
    <link>https://architect.proyectoomega.es/</link>
    <description>Recent content on Solutions Architect Resources</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Proyecto Omega</copyright>
    <lastBuildDate>Sun, 10 Jul 2022 11:20:26 +0100</lastBuildDate><atom:link href="https://architect.proyectoomega.es/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creación del proyecto en Cloud Shell</title>
      <link>https://architect.proyectoomega.es/staticsites/nuevositecloud/creationincloudshell/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/nuevositecloud/creationincloudshell/</guid>
      <description>Intro #### Install Brew
 Clone.  git clone https://github.com/Homebrew/brew ~/.linuxbrew/Homebrew 2. Compile.
mkdir ~/.linuxbrew/bin 3. Link.
ln -s ../Homebrew/bin/brew ~/.linuxbrew/bin 4. Update environment.
eval $(~/.linuxbrew/bin/brew shellenv) 5. Update.
brew 6. Confirm.
brew &amp;ndash;version
Install hugo from home enable brew
eval $(~/.linuxbrew/bin/brew shellenv) Install hugo
brew install hugo Edit the .profile
# ~/.profile: executed by the command interpreter for login shells. # This file is not read by bash(1), if ~/.</description>
    </item>
    
    <item>
      <title>Hugo Google Analytics Integration</title>
      <link>https://architect.proyectoomega.es/staticsites/hugo/hugoanalytics/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/hugo/hugoanalytics/</guid>
      <description>Hugo Google Analytics Integration Analytics vs Tags Think of Tag manager as a way for you to manage ALL your ‘tags’ - for Google, Facebook, Google Ads, other ad networks, other analytics, etc
If you are happy with Google Analytics and just want Event Tracking … then stick with Google Analytics … and to implement GA event tagging, you just need to update your head.html to include a small script …</description>
    </item>
    
    <item>
      <title>Hugo Google SEO Integration</title>
      <link>https://architect.proyectoomega.es/staticsites/hugo/hugoseo/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/hugo/hugoseo/</guid>
      <description>Hugo Google SEO Integration SEO Search Engine Optimization.
Edit config.toml Edit the title and sitemap.
title = &amp;#39;text to appear ein search&amp;#39; [sitemap]  changefreq = &amp;#34;weekly&amp;#34;  filename = &amp;#34;sitemap.xml&amp;#34;  priority = 0.5 &amp;lt;meta name=&amp;#34;keywords&amp;#34; content=&amp;#34;{{ if .Params.Keywords }}{{ delimit .Params.Keywords &amp;#34;, &amp;#34; }}{{ end }}&amp;#34;&amp;gt; Edit head partial &amp;lt;meta name=&amp;#34;keywords&amp;#34; content=&amp;#34;{{ if .Params.Keywords }}{{ delimit .Params.Keywords &amp;#34;, &amp;#34; }}{{ end }}&amp;#34;&amp;gt; Then in your markdown files add keywords for the sarach</description>
    </item>
    
    <item>
      <title>Hugo Layouts</title>
      <link>https://architect.proyectoomega.es/staticsites/hugo/hugolayouts/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/hugo/hugolayouts/</guid>
      <description>Layout Index.html  First layout to pay attention is the one under the folder layouts/index.html If you need to edit that layout yu can make a copy from themes/whatevertheme/layouts/index.html folder in layouts/index.html Let&amp;rsquo;s say that your content is shown in 3 columns (size of 4 each one) to 4 Columns (size of 3 each) you can chang as follows
 &amp;lt;!-- topic-item --&amp;gt;  {{ range (where .Site.Pages &amp;#34;Type&amp;#34; &amp;#34;docs&amp;#34;) }}  &amp;lt;div class=&amp;#34;col-lg-3 col-sm-6 mb-4&amp;#34;&amp;gt; Custom CSS  You can use your own css files to override de css in use.</description>
    </item>
    
    <item>
      <title>My Hugo</title>
      <link>https://architect.proyectoomega.es/staticsites/hugo/myhugo/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/hugo/myhugo/</guid>
      <description>My Hugo Setup  Clone the repo  git clone git@github-juaestiv:juaestiv/omega-hugo.git template-hugo rm -rf .git cd public rm -rf .git cd .. cd themes rm -rf dot-hugo cd .. git init git add . git commit -m &amp;#34;before theme&amp;#34; cd themes git submodule add .....   </description>
    </item>
    
    <item>
      <title>Preparación</title>
      <link>https://architect.proyectoomega.es/staticsites/nuevositecloud/setup/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/nuevositecloud/setup/</guid>
      <description>Intro Este es un proceso paso a paso para crear un nuevo site basado en hugo sin depender del portátil. Para ello vamos a utilizar el cloudShell the GCP
Google Cloud Identity &amp;amp; Google Workspaces Se puede utilizar GCP sin tener una organización pero en mi caso es preferible hacer un setup como una empresa lo haría (parcialmente porque tampoco soy un super experto)
 Dominio adquirido y configurado por ejemplo en goDady Una cuenta de pago con un solo usuario de Workspaces (unos 6 euros) En Workspaces podemos añadir Cloud Identity para poder añadir hasta 50 usuarios sin tener que pagar licencia por cada uno de ellos.</description>
    </item>
    
    <item>
      <title>Appsync Mock</title>
      <link>https://architect.proyectoomega.es/api/graphql/appsyncmock/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/api/graphql/appsyncmock/</guid>
      <description>Appsync Start the mock api service
amplify mock api Sample mutation
mutation MyMutation {  createWebnavigation(input: {navpage: &amp;#34;sample&amp;#34;, updatedAt: &amp;#34;2022&amp;#34;}) {  navpage  updatedAt  } } Sample list
query MyQuery {  listWebnavigations {  items {  createdAt  id  navpage  updatedAt  }  } } Testing with postman  Create a POST REQUEST URL http://192.168.1.220:20002/graphql Add auth  Key: x-api-key
Value: ccccc 4. body (check graphql)</description>
    </item>
    
    <item>
      <title>ddddd</title>
      <link>https://architect.proyectoomega.es/blogcategory/subject/appsyncmock/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/blogcategory/subject/appsyncmock/</guid>
      <description>Appsync </description>
    </item>
    
    <item>
      <title>Terraform</title>
      <link>https://architect.proyectoomega.es/iac/terraform/terraform/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/iac/terraform/terraform/</guid>
      <description>Hello example</description>
    </item>
    
    <item>
      <title>Terraform Modules</title>
      <link>https://architect.proyectoomega.es/iac/terraform/terraformmodules/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/iac/terraform/terraformmodules/</guid>
      <description>Intro The use of modules will allow to write less code and to reuse the resource creation in several environments. I am going to create a module which setup the following resources
 VPC Public Subnet Private Subnet Internet Gateway  Once the module is created it can be used to deploy Production and Staging environments without the need to repeat the code for those envirroments.
The idea is that it will be a variable that will replace the CIDR blocks acording the environment.</description>
    </item>
    
  </channel>
</rss>

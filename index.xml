<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Solutions Architect Resources</title>
    <link>https://architect.proyectoomega.es/</link>
    <description>Recent content on Solutions Architect Resources</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Proyecto Omega</copyright>
    <lastBuildDate>Sun, 10 Jul 2022 11:20:26 +0100</lastBuildDate><atom:link href="https://architect.proyectoomega.es/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo Layouts</title>
      <link>https://architect.proyectoomega.es/staticsites/hugo/hugolayouts/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/hugo/hugolayouts/</guid>
      <description>Layout Index.html  First layout to pay attention is the one under the folder layouts/index.html If you need to edit that layout yu can make a copy from themes/whatevertheme/layouts/index.html folder in layouts/index.html Let&amp;rsquo;s say that your content is shown in 3 columns (size of 4 each one) to 4 Columns (size of 3 each) you can chang as follows
 &amp;lt;!-- topic-item --&amp;gt;  {{ range (where .Site.Pages &amp;#34;Type&amp;#34; &amp;#34;docs&amp;#34;) }}  &amp;lt;div class=&amp;#34;col-lg-3 col-sm-6 mb-4&amp;#34;&amp;gt; Custom CSS  You can use your own css files to override de css in use.</description>
    </item>
    
    <item>
      <title>Appsync Mock</title>
      <link>https://architect.proyectoomega.es/api/graphql/appsyncmock/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/api/graphql/appsyncmock/</guid>
      <description>Appsync Start the mock api service
amplify mock api Sample mutation
mutation MyMutation {  createWebnavigation(input: {navpage: &amp;#34;sample&amp;#34;, updatedAt: &amp;#34;2022&amp;#34;}) {  navpage  updatedAt  } } Sample list
query MyQuery {  listWebnavigations {  items {  createdAt  id  navpage  updatedAt  }  } } Testing with postman  Create a POST REQUEST URL http://192.168.1.220:20002/graphql Add auth  Key: x-api-key
Value: ccccc 4. body (check graphql)</description>
    </item>
    
    <item>
      <title>ddddd</title>
      <link>https://architect.proyectoomega.es/blogcategory/subject/appsyncmock/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/blogcategory/subject/appsyncmock/</guid>
      <description>Appsync </description>
    </item>
    
    <item>
      <title>Terraform</title>
      <link>https://architect.proyectoomega.es/iac/terraform/terraform/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/iac/terraform/terraform/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Terraform Staging</title>
      <link>https://architect.proyectoomega.es/iac/terraform/terraformstaging/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/iac/terraform/terraformstaging/</guid>
      <description>Intro I am going to use a terraform project to deploy resources in three environments, dev, staging and production. There are several alternatives. First one will be using several directories with variables
Option 1. Step 1. Create a folder tree Create a folder tree as follows
yourproject │ ├── modules │ ├── prod │ └── staging We can create three VPC one per environment. To do dat first we are going to create a moudule for vpc under modules folder.</description>
    </item>
    
  </channel>
</rss>

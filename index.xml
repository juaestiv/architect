<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Solutions Architect Resources</title>
    <link>https://architect.proyectoomega.es/</link>
    <description>Recent content on Solutions Architect Resources</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Proyecto Omega</copyright>
    <lastBuildDate>Sun, 09 Oct 2022 08:16:01 +0200</lastBuildDate><atom:link href="https://architect.proyectoomega.es/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Angular Localize and Switcher</title>
      <link>https://architect.proyectoomega.es/angular/angularsamples/angularlocalize/</link>
      <pubDate>Sun, 09 Oct 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/angular/angularsamples/angularlocalize/</guid>
      <description>https://javascript.plainenglish.io/angular-translating-the-application-language-using-angular-localize-and-deploying-it-to-firebase-d2b127e64496
download https://poedit.net/ https://dev.to/batbrain9392/internationalization-with-angular-v10-693
https://medium.com/dailyjs/maintaining-multi-language-angular-applications-26b74df8d085
Create the app  Create an application with routing Common steps   material configure routes Home Screen First component router outlet  ng new 101-angular-localize --style scss --routing true ng add @angular/material ng g c screens/HomeScreen ng g c components/Header ng g c components/sample-component sudo npm -g i serve import { HomeScreenComponent } from &amp;#39;./screens/home-screen/home-screen.component&amp;#39;  const routes: Routes = [  { path: &amp;#39;home-screen&amp;#39;, component: HomeScreenComponent },  { path: &amp;#39;&amp;#39;, redirectTo: &amp;#39;/home-screen&amp;#39;, pathMatch: &amp;#39;full&amp;#39; } ]; Install and setup the localize package  Install  ng add @angular/localize Edit the angular .</description>
    </item>
    
    <item>
      <title>Angular Pokemon</title>
      <link>https://architect.proyectoomega.es/angular/angularsamples/angularpokemon/</link>
      <pubDate>Sun, 09 Oct 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/angular/angularsamples/angularpokemon/</guid>
      <description>Pokemon https://pokeapi.co/ https://pokeapi.co/docs/v2
https://pokeapi.co/api/v2//{id or name}
Endpoints:
 items Berries Locations, etc  Posibles Ampliaciones Búsqueda por imagen
 price evolution  App Creation
ng new poke-app --style=scss --routing=false Packages
ng add @angular/material --theme=indigo-pink --typography=true --animations=true This should add some entries to index.html
 &amp;lt;link href=&amp;#34;https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&amp;amp;display=swap&amp;#34; rel=&amp;#34;stylesheet&amp;#34;&amp;gt;  &amp;lt;link href=&amp;#34;https://fonts.googleapis.com/icon?family=Material+Icons&amp;#34; rel=&amp;#34;stylesheet&amp;#34;&amp;gt; and the sytles.css
/* You can add global styles to this file, and also import other style files */  html, body { height: 100%; } body { margin: 0; font-family: Roboto, &amp;#34;Helvetica Neue&amp;#34;, sans-serif; } the app.</description>
    </item>
    
    <item>
      <title>gCloud compute</title>
      <link>https://architect.proyectoomega.es/gcloud/cli/gcloudcomputecli/</link>
      <pubDate>Sun, 09 Oct 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/gcloud/cli/gcloudcomputecli/</guid>
      <description>Compute CLI Create https://cloud.google.com/sdk/gcloud/reference/compute/instances/create
gcloud compute instances create asterisks \  --project=hospitality-demo-361210 \  --subnet=reds \  --image=centos-7-v20200420 \  --image-project centos-cloud \  --zone europe-southwest1-a \  --image-project=centos-cloud \  --boot-disk-size=40GB \  --boot-disk-type=pd-standard \  --boot-disk-device-name=instance-1 \  --shielded-secure-boot \  --no-address \  --machine-type n2-standard-2 </description>
    </item>
    
    <item>
      <title>Creación del proyecto en Cloud Shell</title>
      <link>https://architect.proyectoomega.es/staticsites/nuevositecloud/creationincloudshell/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/nuevositecloud/creationincloudshell/</guid>
      <description>Intro Install Brew 1. Clone git clone https://github.com/Homebrew/brew ~/.linuxbrew/Homebrew 2. Compile. mkdir ~/.linuxbrew/bin 3. Link. ln -s ../Homebrew/bin/brew ~/.linuxbrew/bin 4.Update environment. eval $(~/.linuxbrew/bin/brew shellenv) brew 5. Add it to path. if [ -d &amp;#34;$HOME/.linuxbrew/bin&amp;#34; ] ; then  PATH=&amp;#34;$HOME/.linuxbrew/bin:$PATH&amp;#34; fi 6. Confirm. In other terminal
brew --version Install hugo Install hugo
brew install hugo Edit the .profile
# ~/.profile: executed by the command interpreter for login shells. # This file is not read by bash(1), if ~/.</description>
    </item>
    
    <item>
      <title>Hugo Google Analytics Integration</title>
      <link>https://architect.proyectoomega.es/staticsites/hugo/hugoanalytics/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/hugo/hugoanalytics/</guid>
      <description>Hugo Google Analytics Integration Analytics vs Tags Think of Tag manager as a way for you to manage ALL your ‘tags’ - for Google, Facebook, Google Ads, other ad networks, other analytics, etc
If you are happy with Google Analytics and just want Event Tracking … then stick with Google Analytics … and to implement GA event tagging, you just need to update your head.html to include a small script …</description>
    </item>
    
    <item>
      <title>Hugo Google SEO Integration</title>
      <link>https://architect.proyectoomega.es/staticsites/hugo/hugoseo/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/hugo/hugoseo/</guid>
      <description>Hugo Google SEO Integration SEO Search Engine Optimization.
Edit config.toml Edit the title and sitemap.
title = &amp;#39;text to appear ein search&amp;#39; [sitemap]  changefreq = &amp;#34;weekly&amp;#34;  filename = &amp;#34;sitemap.xml&amp;#34;  priority = 0.5 &amp;lt;meta name=&amp;#34;keywords&amp;#34; content=&amp;#34;{{ if .Params.Keywords }}{{ delimit .Params.Keywords &amp;#34;, &amp;#34; }}{{ end }}&amp;#34;&amp;gt; Edit head partial &amp;lt;meta name=&amp;#34;keywords&amp;#34; content=&amp;#34;{{ if .Params.Keywords }}{{ delimit .Params.Keywords &amp;#34;, &amp;#34; }}{{ end }}&amp;#34;&amp;gt; Then in your markdown files add keywords for the sarach</description>
    </item>
    
    <item>
      <title>Hugo Layouts</title>
      <link>https://architect.proyectoomega.es/staticsites/hugo/hugolayouts/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/hugo/hugolayouts/</guid>
      <description>Layout Index.html  First layout to pay attention is the one under the folder layouts/index.html If you need to edit that layout yu can make a copy from themes/whatevertheme/layouts/index.html folder in layouts/index.html Let&amp;rsquo;s say that your content is shown in 3 columns (size of 4 each one) to 4 Columns (size of 3 each) you can chang as follows
 &amp;lt;!-- topic-item --&amp;gt;  {{ range (where .Site.Pages &amp;#34;Type&amp;#34; &amp;#34;docs&amp;#34;) }}  &amp;lt;div class=&amp;#34;col-lg-3 col-sm-6 mb-4&amp;#34;&amp;gt; Custom CSS  You can use your own css files to override de css in use.</description>
    </item>
    
    <item>
      <title>My Hugo</title>
      <link>https://architect.proyectoomega.es/staticsites/hugo/myhugo/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/hugo/myhugo/</guid>
      <description>My Hugo Setup  Clone the repo  git clone git@github-juaestiv:juaestiv/omega-hugo.git template-hugo rm -rf .git cd public rm -rf .git cd .. cd themes rm -rf dot-hugo cd .. git init git add . git commit -m &amp;#34;before theme&amp;#34; cd themes git submodule add .....   </description>
    </item>
    
    <item>
      <title>Preparación</title>
      <link>https://architect.proyectoomega.es/staticsites/nuevositecloud/setup/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/staticsites/nuevositecloud/setup/</guid>
      <description>Intro Este es un proceso paso a paso para crear un nuevo site basado en hugo sin depender del portátil. Para ello vamos a utilizar el cloudShell the GCP
Google Cloud Identity &amp;amp; Google Workspaces Se puede utilizar GCP sin tener una organización pero en mi caso es preferible hacer un setup como una empresa lo haría (parcialmente porque tampoco soy un super experto)
 Dominio adquirido y configurado por ejemplo en goDady Una cuenta de pago con un solo usuario de Workspaces (unos 6 euros) En Workspaces podemos añadir Cloud Identity para poder añadir hasta 50 usuarios sin tener que pagar licencia por cada uno de ellos.</description>
    </item>
    
    <item>
      <title>Terraform in Cloud Shell</title>
      <link>https://architect.proyectoomega.es/iac/terraform/terraformincloudshell/</link>
      <pubDate>Sun, 10 Jul 2022 11:20:26 +0100</pubDate>
      
      <guid>https://architect.proyectoomega.es/iac/terraform/terraformincloudshell/</guid>
      <description>Intro Install Brew 1. Clone git clone https://github.com/Homebrew/brew ~/.linuxbrew/Homebrew 2. Compile. mkdir ~/.linuxbrew/bin 3. Link. ln -s ../Homebrew/bin/brew ~/.linuxbrew/bin 4.Update environment. eval $(~/.linuxbrew/bin/brew shellenv) brew 5. Add it to path. if [ -d &amp;#34;$HOME/.linuxbrew/bin&amp;#34; ] ; then  PATH=&amp;#34;$HOME/.linuxbrew/bin:$PATH&amp;#34; fi 6. Confirm. In other terminal
brew --version Install Terraform brew tap hashicorp/tap brew install hashicorp/tap/terraform </description>
    </item>
    
    <item>
      <title>Angular calling DF API using express</title>
      <link>https://architect.proyectoomega.es/angular/angularfordf/angularcallingexpressapi/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/angular/angularfordf/angularcallingexpressapi/</guid>
      <description>Call to express server API to invoke DF detectIntent https://expressjs.com/en/resources/middleware/cors.html
 Create an interface that will be used to recive the body in json of the request  export interface DFRequest {  queryText:string,  languageCode:string,  sessionId:string  } the service will use the interface type to receive the request mi interpretacion. la función devuelve un observable DEntro de ese observable irá la respuesta de la api que de momento es de tipo any  import { Injectable, OnInit } from &amp;#39;@angular/core&amp;#39;; import { HttpClient, HttpParams } from &amp;#39;@angular/common/http&amp;#39;; import { Observable } from &amp;#39;rxjs&amp;#39;; import { environment } from &amp;#39;.</description>
    </item>
    
    <item>
      <title>Angular Navbar</title>
      <link>https://architect.proyectoomega.es/angular/angularskeleton/angularnavbar/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/angular/angularskeleton/angularnavbar/</guid>
      <description>Navbar ng g c components/nav-bar On app.moudule import material toolbar and any other material component
import { MatToolbarModule } from &amp;#39;@angular/material/toolbar&amp;#39; imports: [  ...,  MatToolbarModule  ], Html of the
 &amp;lt;mat-toolbar color=&amp;#34;primary&amp;#34;&amp;gt;  &amp;lt;button mat-icon-button class=&amp;#34;example-icon&amp;#34; aria-label=&amp;#34;Example icon-button with menu icon&amp;#34;&amp;gt;  &amp;lt;mat-icon&amp;gt;menu&amp;lt;/mat-icon&amp;gt;  &amp;lt;/button&amp;gt;  &amp;lt;span&amp;gt;My App&amp;lt;/span&amp;gt;  &amp;lt;span class=&amp;#34;example-spacer&amp;#34;&amp;gt;&amp;lt;/span&amp;gt;  &amp;lt;button mat-icon-button class=&amp;#34;example-icon favorite-icon&amp;#34; aria-label=&amp;#34;Example icon-button with heart icon&amp;#34;&amp;gt;  &amp;lt;mat-icon&amp;gt;favorite&amp;lt;/mat-icon&amp;gt;  &amp;lt;/button&amp;gt;  &amp;lt;button mat-icon-button class=&amp;#34;example-icon&amp;#34; aria-label=&amp;#34;Example icon-button with share icon&amp;#34;&amp;gt;  &amp;lt;mat-icon&amp;gt;share&amp;lt;/mat-icon&amp;gt;  &amp;lt;/button&amp;gt;  &amp;lt;/mat-toolbar&amp;gt;  Don`t forget to edit the css for example to make the spacer works</description>
    </item>
    
    <item>
      <title>Angular new project</title>
      <link>https://architect.proyectoomega.es/angular/angularskeleton/angularnewproject/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/angular/angularskeleton/angularnewproject/</guid>
      <description>Create and install packages npx ng new &amp;lt;projectname&amp;gt; -&amp;gt; Routing yes -&amp;gt; CSS
Install material
cd &amp;lt;projectname&amp;gt; ng add @angular/material Homescreen Create the homescree component
ng g c screens/homeScreen Import that component from app-routing.module.ts and check the the Routes , RouterModule are imported and array created.
import { HomeScreenComponent } from &amp;#39;./screens/home-screen/home-screen.component&amp;#39;; import { RouterModule, Routes } from &amp;#39;@angular/router&amp;#39;;  const routes: Routes = []; Check that the app.module imports the app-routing-moudule Create a rout in app-routing.</description>
    </item>
    
    <item>
      <title>Angular Responsive Layout</title>
      <link>https://architect.proyectoomega.es/angular/angularskeleton/angularresponsivelayout/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/angular/angularskeleton/angularresponsivelayout/</guid>
      <description>Install Package npm i -s @angular/flex-layout @angular/cdk Imports
import { FlexLayoutModule } from &amp;#39;@angular/flex-layout&amp;#39;; ...  @NgModule({  ...  imports: [ FlexLayoutModule ],  ... }); Sample
 &amp;lt;div fxShow=&amp;#34;true&amp;#34; fxHide.lt-md=&amp;#34;true&amp;#34;&amp;gt;  &amp;lt;a mat-button routerLink=&amp;#34;/about-us&amp;#34;&amp;gt;About us&amp;lt;/a&amp;gt;  &amp;lt;a mat-button routerLink=&amp;#34;/prices&amp;#34;&amp;gt;Prices&amp;lt;/a&amp;gt;  &amp;lt;a mat-button routerLink=&amp;#34;/start-page&amp;#34;&amp;gt;Start page&amp;lt;/a&amp;gt;  &amp;lt;a mat-button routerLink=&amp;#34;/offer&amp;#34;&amp;gt;Offer&amp;lt;/a&amp;gt;  &amp;lt;a mat-button routerLink=&amp;#34;/contact&amp;#34;&amp;gt;Contact&amp;lt;/a&amp;gt;  &amp;lt;/div&amp;gt; </description>
    </item>
    
    <item>
      <title>Angular Sidebar</title>
      <link>https://architect.proyectoomega.es/angular/angularskeleton/angularsidebar/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/angular/angularskeleton/angularsidebar/</guid>
      <description>Install Package  &amp;lt;mat-sidenav-container fxFlexFill class=&amp;#34;example-container&amp;#34;&amp;gt;   &amp;lt;mat-sidenav color=&amp;#34;primary&amp;#34; #sidenav fxLayout=&amp;#34;column&amp;#34; mode=&amp;#34;over&amp;#34; opened=&amp;#34;false&amp;#34; fxHide.gt-sm=&amp;#34;true&amp;#34;&amp;gt;  &amp;lt;div fxLayout=&amp;#34;column&amp;#34;&amp;gt;  &amp;lt;a mat-button routerLink=&amp;#34;/about-us&amp;#34;&amp;gt;About us&amp;lt;/a&amp;gt;  &amp;lt;a mat-button routerLink=&amp;#34;/prices&amp;#34;&amp;gt;Prices&amp;lt;/a&amp;gt;  &amp;lt;a mat-button routerLink=&amp;#34;/start-page&amp;#34;&amp;gt;Start page&amp;lt;/a&amp;gt;  &amp;lt;a mat-button routerLink=&amp;#34;/offer&amp;#34;&amp;gt;Offer&amp;lt;/a&amp;gt;  &amp;lt;a mat-button routerLink=&amp;#34;/contact&amp;#34;&amp;gt;Contact&amp;lt;/a&amp;gt;  &amp;lt;/div&amp;gt;  &amp;lt;/mat-sidenav&amp;gt;  &amp;lt;mat-sidenav-content fxFlexFill&amp;gt;  Awesome content  &amp;lt;/mat-sidenav-content&amp;gt;  &amp;lt;/mat-sidenav-container&amp;gt; </description>
    </item>
    
    <item>
      <title>Angular Website Base for DF Projects</title>
      <link>https://architect.proyectoomega.es/angular/angularfordf/angularfordfbasicwebsite/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/angular/angularfordf/angularfordfbasicwebsite/</guid>
      <description>Base Angular app Resources https://www.youtube.com/watch?v=dFN79tEr_bc https://stackoverflow.com/questions/58813245/401-unauthenticated-for-detect-intent-dialogflow https://chatbotslife.com/dialogflow-v2-rest-api-communication-6cf7ab66ab36 https://www.npmjs.com/package/google-oauth-jwt https://www.npmjs.com/package/@google-cloud/dialogflow-cx https://github.com/googleapis/nodejs-dialogflow-cx/blob/main/samples/detect-intent-event.js
 Create angular app  new df-101-app --style=scss --routing=true Add Material dependendies. We will use routing  ng add @angular/material --theme indigo-pink --typography true --animations true Add the HomeScreen  ng g c screens/HomeScreen Edit app-routing module with a route to home screen  import { HomeScreenComponent } from &amp;#39;./screens/home-screen/home-screen.component&amp;#39;; const routes: Routes = [  { path: &amp;#39;home-screen&amp;#39;, component: HomeScreenComponent }, ]; Install http server.</description>
    </item>
    
    <item>
      <title>Appsync Mock</title>
      <link>https://architect.proyectoomega.es/api/graphql/appsyncmock/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/api/graphql/appsyncmock/</guid>
      <description>Appsync Start the mock api service
amplify mock api Sample mutation
mutation MyMutation {  createWebnavigation(input: {navpage: &amp;#34;sample&amp;#34;, updatedAt: &amp;#34;2022&amp;#34;}) {  navpage  updatedAt  } } Sample list
query MyQuery {  listWebnavigations {  items {  createdAt  id  navpage  updatedAt  }  } } Testing with postman  Create a POST REQUEST URL http://192.168.1.220:20002/graphql Add auth  Key: x-api-key
Value: ccccc 4. body (check graphql)</description>
    </item>
    
    <item>
      <title>ddddd</title>
      <link>https://architect.proyectoomega.es/blogcategory/subject/appsyncmock/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/blogcategory/subject/appsyncmock/</guid>
      <description>Appsync </description>
    </item>
    
    <item>
      <title>Dialogflow Event with Params</title>
      <link>https://architect.proyectoomega.es/dialogflow/dfsampleevents/dfeventparams/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/dialogflow/dfsampleevents/dfeventparams/</guid>
      <description>Event {  &amp;#34;detectIntentResponseId&amp;#34;: &amp;#34;423fa989-651c-410d-9049-11b7890a6200&amp;#34;,  &amp;#34;pageInfo&amp;#34;: {  &amp;#34;currentPage&amp;#34;: &amp;#34;projects/cepf-l300-juananestival/locations/global/agents/72eac020-a0bb-469c-93f4-dd0df3082047/flows/00000000-0000-0000-0000-000000000000/pages/6935c97f-ff7c-4886-9603-292eef406039&amp;#34;,  &amp;#34;displayName&amp;#34;: &amp;#34;Confirm&amp;#34;  },  &amp;#34;sessionInfo&amp;#34;: {  &amp;#34;session&amp;#34;: &amp;#34;projects/cepf-l300-juananestival/locations/global/agents/72eac020-a0bb-469c-93f4-dd0df3082047/sessions/26926c-a2f-cc0-729-896ed5fc1&amp;#34;,  &amp;#34;parameters&amp;#34;: { &amp;#34;product&amp;#34;: &amp;#34;nest&amp;#34;, &amp;#34;quantity&amp;#34;: 2.0 }  },  &amp;#34;fulfillmentInfo&amp;#34;: { &amp;#34;tag&amp;#34;: &amp;#34;purchase&amp;#34; },  &amp;#34;messages&amp;#34;: [  {  &amp;#34;text&amp;#34;: {  &amp;#34;text&amp;#34;: [&amp;#34;you have ordered 2 nest&amp;#34;],  &amp;#34;redactedText&amp;#34;: [&amp;#34;you have ordered 2 nest&amp;#34;]  },  &amp;#34;responseType&amp;#34;: &amp;#34;ENTRY_PROMPT&amp;#34;,  &amp;#34;source&amp;#34;: &amp;#34;VIRTUAL_AGENT&amp;#34;  }  ],  &amp;#34;text&amp;#34;: &amp;#34;2&amp;#34;,  &amp;#34;languageCode&amp;#34;: &amp;#34;en&amp;#34; } </description>
    </item>
    
    <item>
      <title>gCloud Basic Commands</title>
      <link>https://architect.proyectoomega.es/gcloud/cli/gcloud101/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/gcloud/cli/gcloud101/</guid>
      <description>Superbasic commands https://gist.github.com/pydevops/cffbd3c694d599c6ca18342d3625af97
# List billing accounts available gcloud beta billing accounts list The user must to have privileges
List projects
gcloud project list Current project
gcloud config list Just org id
gcloud organizations list --format=&amp;#39;value(ID)&amp;#39; List folders
cloud resource-manager folders list --organization $(gcloud organizations list --format=&amp;#39;value(ID)&amp;#39;) gcloud resource-manager folders list --organization $(gcloud organizations list --format=&amp;#39;value(ID)&amp;#39;) --filter=&amp;#39;Development&amp;#39; Get the Id of Development folder
cloud resource-manager folders list --organization $(gcloud organizations list --format=&amp;#39;value(ID)&amp;#39;) --filter=&amp;#39;Development&amp;#39; --format=&amp;#39;value(ID)&amp;#39; </description>
    </item>
    
    <item>
      <title>gCloud Usefull commadns</title>
      <link>https://architect.proyectoomega.es/gcloud/cli/gcloudsnippetcommands/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/gcloud/cli/gcloudsnippetcommands/</guid>
      <description>Some usefull commands gcloud organizations list This returns name and id:
DISPLAY_NAME ID DIRECTORY_CUSTOMER_ID your-org 555555555 ndo9dno3 List the folders
gcloud resource-manager folders list --organization 555555555 To list a subfolder of a folder
gcloud resource-manager folders list --folder=555555555 json format gcloud resource-manager folders list --folder=555555555 --format=json extract value
gcloud resource-manager folders list --folder=555555555 --format=json | grep name | awk -F&amp;#39; &amp;#39; &amp;#39;{print $2}&amp;#39; | awk -F&amp;#39;&amp;#34;&amp;#39; &amp;#39;{print $2}&amp;#39; folders/555555555 another way to get only the id</description>
    </item>
    
    <item>
      <title>Python Sample for Mic Realtime transcription</title>
      <link>https://architect.proyectoomega.es/gcloud/stt/pythonmictest/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/gcloud/stt/pythonmictest/</guid>
      <description>Prerequs  Enable the API Create the JSON keys export the credentials  export GOOGLE_APPLICATION_CREDENTIALS=yourpath install portaudio  brew install portaudio brew link portaudio Create a transcribe_streaming_mic.py  #!/usr/bin/env python  # Copyright 2017 Google Inc. All Rights Reserved. # # Licensed under the Apache License, Version 2.0 (the &amp;#34;License&amp;#34;); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.</description>
    </item>
    
    <item>
      <title>React Fast Start 101 </title>
      <link>https://architect.proyectoomega.es/react/faststart/reactfaststart101/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/react/faststart/reactfaststart101/</guid>
      <description>New app structure Create a directory with the name of the project and inside we will have front and backend
mkdir nameproject cd nameproject mkdir backend npx create-react-app front --template typescript SRC Structure Under src
 components folder screen folders  install ES7 REact Redux plugin vscode
Components  rafce to create component .container to create a div with cassname container  props to components send with spread operator
function App() {  interface IProps {  name:string,  age?</description>
    </item>
    
    <item>
      <title>Terraform  101</title>
      <link>https://architect.proyectoomega.es/iac/terraform/terraform101/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/iac/terraform/terraform101/</guid>
      <description>Basics of terraform and the use with gcloud gcloud cli tips gcloud organizations list This returns name and id
DISPLAY_NAME ID DIRECTORY_CUSTOMER_ID your-org 555555555 ndo9dno3 List the folders
gcloud resource-manager folders list --organization 555555555 To list a subfolder of a folder
gcloud resource-manager folders list --folder=555555555 json format gcloud resource-manager folders list --folder=555555555 --format=json extracta vaule
gcloud resource-manager folders list --folder=555555555 --format=json | grep name | awk -F&amp;#39; &amp;#39; &amp;#39;{print $2}&amp;#39; | awk -F&amp;#39;&amp;#34;&amp;#39; &amp;#39;{print $2}&amp;#39; folders/555555555 another way to get only the id</description>
    </item>
    
    <item>
      <title>Terraform  GCP Cloud Functions</title>
      <link>https://architect.proyectoomega.es/iac/terraform/terraformcloudfunctions/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/iac/terraform/terraformcloudfunctions/</guid>
      <description>Setup environment variables https://cloud.google.com/functions/docs/tutorials/terraform
PROJECT_ID=bubbly-journey-361318 REGION= BILLING_ACCOUNT_ID= gcloud config set project ${PROJECT_ID} We can create a project from cli
gcloud projects create PROJECT_ID_UNIQUE_NAME --name=&amp;#34;My App&amp;#34; --organization=nnnnn gcloud projects create PROJECT_ID_UNIQUE_NAME --name=&amp;#34;My App&amp;#34; --folder=nnnnnnn gcloud beta billing projects link ${PROJECT_ID} --billing-account=${BILLING_ACCOUNT_ID} Maybe you have to change the user. In my case
gcloud auth login login with privileged user make the changes can come back again to the less privileged user
gcloud auth login Create two folders</description>
    </item>
    
    <item>
      <title>Terraform CDK</title>
      <link>https://architect.proyectoomega.es/iac/terraform/terraformcdk/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/iac/terraform/terraformcdk/</guid>
      <description>Install Terraform cdk Pre-requisites
 NODE, NPM YARN TERRAFORM   npm i --global cdktf-cli@next Go to an empty directory
cdktf init --template=typescript --local ## Setup de cdk json file edit the provider
{  &amp;#34;language&amp;#34;: &amp;#34;typescript&amp;#34;,  &amp;#34;app&amp;#34;: &amp;#34;npx ts-node main.ts&amp;#34;,  &amp;#34;projectId&amp;#34;: &amp;#34;f8143026-48c9-4aad-a83b-8de2bbbb65eb&amp;#34;,  &amp;#34;sendCrashReports&amp;#34;: &amp;#34;true&amp;#34;,  &amp;#34;terraformProviders&amp;#34;: [  &amp;#34;google&amp;#34;  ],  &amp;#34;terraformModules&amp;#34;: [],  &amp;#34;context&amp;#34;: {  &amp;#34;excludeStackIdFromLogicalIds&amp;#34;: &amp;#34;true&amp;#34;,  &amp;#34;allowSepCharsInLogicalIds&amp;#34;: &amp;#34;true&amp;#34;  } } run</description>
    </item>
    
    <item>
      <title>Terraform Environment Variables</title>
      <link>https://architect.proyectoomega.es/iac/terraform/terraform/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/iac/terraform/terraform/</guid>
      <description>Setup environment variables Whenever we work with gcloud commands and cli commands in general it is a good practice to setup some variables to save some typing later.
PROJECT_ID= REGION= Now we can check them
echo $PROJECT_ID echo $REGION Now we don&amp;rsquo;t need to remember the project id.
gcloud config set project ${PROJECT_ID} Login
gcloud auth application-default login </description>
    </item>
    
    <item>
      <title>Terraform Modules</title>
      <link>https://architect.proyectoomega.es/iac/terraform/terraformmodules/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/iac/terraform/terraformmodules/</guid>
      <description>Intro new
 create a modules folder and inside folder with a descriptive name of the module the main folder and the desireded module folder should have a main.ft  old The use of modules will allow to write less code and to reuse the resource creation in several environments. I am going to create a module which setup the following resources
 VPC Public Subnet Private Subnet Internet Gateway  Once the module is created it can be used to deploy Production and Staging environments without the need to repeat the code for those envirroments.</description>
    </item>
    
    <item>
      <title>Test Dialogflow CX with Oauth in postman</title>
      <link>https://architect.proyectoomega.es/gcloud/dialogflowcx/vscodeclousshell/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/gcloud/dialogflowcx/vscodeclousshell/</guid>
      <description>Prerequisites To list agents
 Confgiure a GET Request  https://global-dialogflow.googleapis.com/v3/projects/hospitality-demo-361210/locations/global/agents Authorization TAB  Type OAUTH 2.0 Add authorization data to: Request Headers Token Name: a name Grant Type: Authorization Code Callback URL: https://oauth.pstmn.io/v1/browser-callback Don&amp;rsquo;t check use browser Auth URL https://accounts.google.com/o/oauth2/auth Access Token URL: https://accounts.google.com/o/oauth2/token Client Id: Use variables Client Secret: Use Variables Scope: https://www.googleapis.com/auth/dialogflow Client Authentication: send as basic auth header    Click on generate new access token</description>
    </item>
    
    <item>
      <title>Testing cloud functions locally</title>
      <link>https://architect.proyectoomega.es/gcloud/cloudfunctions/testingcfuntionslocally/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/gcloud/cloudfunctions/testingcfuntionslocally/</guid>
      <description>Prerequisites gcloud cli
Create directory  create an empty directpry and npm init.  mkdir cloud-functions-local &amp;amp;&amp;amp; cd &amp;#34;$_&amp;#34; npm init Install function frameworks  npm install --save-dev @google-cloud/functions-framework write index.js function  exports.handleWhatever = (req, res) =&amp;gt; {  console.log(`Request body: ${JSON.stringify(req.body)}`)  res.status(200).send({  sessionInfo: {  parameters: {  customer_verified:true  }  }  }) } Start the function  npx functions-framework --target=handleWhatever --port=4444 send a post request with postman or curl  curl --header &amp;#34;Content-Type: application/json&amp;#34; \  --request POST \  --data &amp;#39;{&amp;#34;username&amp;#34;:&amp;#34;xyz&amp;#34;,&amp;#34;password&amp;#34;:&amp;#34;xyz&amp;#34;}&amp;#39; \  http://localhost:4444/ </description>
    </item>
    
    <item>
      <title>Typescript Types</title>
      <link>https://architect.proyectoomega.es/angular/angularskeleton/angulartypes/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/angular/angularskeleton/angulartypes/</guid>
      <description>Types To create a dummy file with sample products and their types.
First create a file with the types Here an example with two types.
export type Person = {  name: string;  country: string; };  export type sampleElement = {  _id:string,  langCode: string,  name: number,  image: string,  description:string,  brand: string,  category: string,  price: number,  countInStock: number,  rating: number,  numReviews: number,  }; Now create an array of elements of the required type importing the type of course</description>
    </item>
    
    <item>
      <title>VSCode connected to Cloud Shell</title>
      <link>https://architect.proyectoomega.es/gcloud/remotedev/vscodeclousshell/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/gcloud/remotedev/vscodeclousshell/</guid>
      <description>Prerequisites I assume that you have already installed and configured gcloud cli in your environment.
Configure your cloudshell  Git Terraform Brew  How to access from your local VS code to your cloud shell gcloud auth login #con el usuario que quiera. Tenia abierto el browser con el chrome en el usuario que quiero tener gcloud cloud-shell ssh # This generates keys in .ssh gcloud config set project omega-358617 # set up you project gcloud cloud-shell ssh # accessing using ssh Configure your ssh Setup the config file</description>
    </item>
    
    <item>
      <title>VSCode connected to Cloud Shell</title>
      <link>https://architect.proyectoomega.es/gcloud/stt/sttcurltest/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/gcloud/stt/sttcurltest/</guid>
      <description>STT Curl text  export credentials  export GOOGLE_APPLICATION_CREDENTIALS=fichero_credentials.json Create a json file  {  &amp;#34;config&amp;#34;: {  &amp;#34;encoding&amp;#34;:&amp;#34;FLAC&amp;#34;,  &amp;#34;sampleRateHertz&amp;#34;: 16000,  &amp;#34;languageCode&amp;#34;: &amp;#34;en-US&amp;#34;,  &amp;#34;enableWordTimeOffsets&amp;#34;: false  },  &amp;#34;audio&amp;#34;: {  &amp;#34;uri&amp;#34;:&amp;#34;gs://cloud-samples-tests/speech/brooklyn.flac&amp;#34;  }  } execjute the curl  curl -s -H &amp;#34;Content-Type: application/json&amp;#34; \  -H &amp;#34;Authorization: Bearer &amp;#34;$(gcloud auth application-default print-access-token) \  https://speech.googleapis.com/v1/speech:recognize \  -d @sync-request.json You can try in postman with a post request https://speech.</description>
    </item>
    
    <item>
      <title>Websockets </title>
      <link>https://architect.proyectoomega.es/web/websockets/websockets101/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/web/websockets/websockets101/</guid>
      <description>Creating the socket server. Intro We are going to create an node express server for backend request. This server will have several funcions like serve websocket requests.
 Folder Structure  The root directory will contain:
 main node project that will be used for backend backend folder frontend folder (can contain their own node_modules folder for example if using react)  Install express package.  npm i express Install dotenv Instead of reading the variables from the OS operating system we will read them from a hidden file called .</description>
    </item>
    
    <item>
      <title>Websockets Host in GCP</title>
      <link>https://architect.proyectoomega.es/web/websockets/websocketshostgcp/</link>
      <pubDate>Sun, 03 Apr 2022 08:16:01 +0200</pubDate>
      
      <guid>https://architect.proyectoomega.es/web/websockets/websocketshostgcp/</guid>
      <description>Intro This repo explains how to create a websocket server using cloud run.
Create the server with this code.  Init npm  npm init npm i express Scripts in package.json
 &amp;#34;scripts&amp;#34;: {  &amp;#34;start&amp;#34;: &amp;#34;node index&amp;#34;  }, index.js
const express = require(&amp;#39;express&amp;#39;); const app = express(); const http = require(&amp;#39;http&amp;#39;).Server(app); const io = require(&amp;#39;socket.io&amp;#39;)(http); const port = process.env.PORT || 3000;  app.use(express.static(__dirname + &amp;#39;/public&amp;#39;));  io.on(&amp;#34;connection&amp;#34;, (socket) =&amp;gt; {  console.</description>
    </item>
    
  </channel>
</rss>
